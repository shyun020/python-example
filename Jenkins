node {
    stage("CHECKOUT SCM") {
        echo "[+] CHECKING OUT SOURCE CODE"
        checkout([
            $class: 'GitSCM',
            branches: [[name: '*/main']],
            userRemoteConfigs: [[
                credentialsId: 'github_access_token',
                url: 'https://github.com/shyun020/python-example.git'
            ]]
        ])
        sh "sleep 1"
    }

    stage("CREATE SBOM") {
        echo "[+] CREATING SBOM"
        sh "curl 'http://127.0.0.1:8282/sbom?repo_url=https://github.com/shyun020/python-example&lan=python' || true"
        sh "sleep 1"
    }

    stage("PACKAGE-CHECK") {
        echo "[+] PACKAGE CHECK"
        sh """
        cd python-example
        python3 -m venv venv || python -m venv venv
        ./venv/bin/pip install --upgrade pip

        if [ -f requirements.txt ]; then
            echo '[+] Installing packages from requirements.txt'
            while read -r package; do
                echo "[+] Installing \${package}"
                ./venv/bin/pip install "\${package}" --index-url=http://localhost:8081/repository/pypi-package-check/simple/ || true
            done < requirements.txt
        else
            echo '[-] requirements.txt not found'
        fi

        cd ..
        rm -rf python-example/venv
        """
        sh "sleep 1"
    }

    stage("DOCKER IMAGE") {
        echo "[+] BUILDING DOCKER IMAGE"
        sh "docker build -t shyun020/python-example:latest . || true"
        sh "sleep 1"
    }

    stage("DOCKER IMAGE PUSH") {
        echo "[+] PUSHING DOCKER IMAGE"
        sh "docker push shyun020/python-example:latest || true"
        sh "sleep 1"
    }
}
